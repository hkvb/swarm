#!/usr/bin/env bash



  ######################################################
  # THIS FILE IS AUTO-GENERATED - PLEASE DO NOT CHANGE #
  ######################################################

#!/usr/bin/env bash

executionplane --silent docker container prune --force
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__blank_volume"
	result=$(docker volume ls | grep "hkvb_swarm__blank_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
#!/usr/bin/env bash

executionplane --silent docker container prune --force
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__elastic_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__elastic_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__grafana_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__grafana_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__kafka_secrets_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__kafka_secrets_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__kafka_data_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__kafka_data_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__ksqldb_queries_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__ksqldb_queries_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__schema_registry_secrets_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__schema_registry_secrets_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__streamsets_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__streamsets_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__zookeeper_secrets_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__zookeeper_secrets_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__zookeeper_data_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__zookeeper_data_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__zookeeper_log_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__zookeeper_log_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
#!/usr/bin/env bash

executionplane --silent docker container prune --force
#!/usr/bin/env bash

executionplane --silent docker container prune --force
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__journal_config"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__journal_config")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__journal_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__journal_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
#!/usr/bin/env bash

executionplane --silent docker container prune --force
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__metrics_node_config"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__metrics_node_config")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__metrics_node_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__metrics_node_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
#!/usr/bin/env bash

executionplane --silent docker container prune --force
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__metrics_overlay_config"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__metrics_overlay_config")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__monitor__metrics_overlay_volume"
	result=$(docker volume ls | grep "hkvb_swarm__monitor__metrics_overlay_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
#!/usr/bin/env bash

executionplane --silent docker container prune --force
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_swarm__traefik__traefik_config_volume"
	result=$(docker volume ls | grep "hkvb_swarm__traefik__traefik_config_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
